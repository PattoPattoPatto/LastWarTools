# -*- coding: utf-8 -*-
"""AmmoBonanza

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i8rhIzuGghXe-RM09fp0fBvJ_HxO5k9y
"""

import random
import statistics as stat
import matplotlib.pyplot as plt
import collections as c

def draw(attempts,limit):
  if attempts == limit:
    #print("limit Hit",attempts)
    return True
  prizeWeight=(12-attempts)*10
  totalWeight=prizeWeight+attemptWeight(attempts)
  draw=random.randint(0,totalWeight)
  if draw<prizeWeight:
    return False
  else:
    return True

def attemptWeight(attempts):
  weightDict ={
      1:1,
      2:1,
      3:5,
      4:5,
      5:5,
      6:10,
      7:10,
      8:10,
      9:30
  }
  return weightDict[attempts]

def limitFinder(iteration):
  iterToKey=iteration%5
  limitDict={
      1:5,
      2:6,
      3:8,
      4:5,
      0:10
  }
  #print(iteration,"'s max is ",limitDict[iterToKey])
  return limitDict[iterToKey]

def oneIteration(iterationCount):
  limit=limitFinder(iterationCount)
  winner = False
  attempts=0
  while not winner:
    attempts+=1
    winner=draw(attempts,limit)

  return attempts

goal=100
levelAttempts=[]
totalAttempts=[]
attemptTracker=[]
trials=1000000
proportion=1/trials
totalAttemptsDict={}
for i in range(trials):
  runningTotal=0
  for i in range(goal):
    currentBullets=oneIteration(i+1)
    runningTotal+=currentBullets
    attemptTracker.append(currentBullets)
  #print(runningTotal)
  levelAttempts.append(attemptTracker)
  totalAttempts.append(runningTotal)
  if runningTotal not in totalAttemptsDict:
    totalAttemptsDict[runningTotal]=proportion
  else:
    newTotal=totalAttemptsDict.get(runningTotal)+proportion
    totalAttemptsDict[runningTotal]=newTotal

orderedAttempts = c.OrderedDict(sorted(totalAttemptsDict.items()))

plt.figure(figsize=(20,8))
plt.bar(range(len(orderedAttempts)), list(orderedAttempts.values()), align='center')
plt.xticks(range(len(orderedAttempts)), list(orderedAttempts.keys()), fontsize=10, rotation='vertical')
plt.xlabel("Ammo Needed")
plt.ylabel("Proportion of attempts")
plt.title("Ammo Bonanza Full Clear Distribution")
print("Mean: ",stat.mean(totalAttempts))
print("Mode: ",stat.mode(totalAttempts))
print("Variance: ",stat.pvariance(totalAttempts))
print("Standard Dev: ",stat.pstdev(totalAttempts))

print(min(totalAttempts),"-",max(totalAttempts))